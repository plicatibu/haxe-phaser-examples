' -------------------------------------------------------------------------------------- '
'   (C) Marcio Andrey Oliveira <plicatibu@plicatibu.com>                                 '
'   Simple build file for Haxe-Phaser sample code.                                       '
'                                                                                        '
'   license MIT License (https://github.com/photonstorm/phaser/blob/master/license.txt)  '
' -------------------------------------------------------------------------------------- '
option explicit

' -------------------------------------------------------------------------------------- '
' This script is intended to be called by the build.vbs scripts that are inside each     '
' project folder. It's purpose is to easy the addition of new projects are release as    '
' the burden of take care of details like paths and file names.                          '
' -------------------------------------------------------------------------------------- '


' -------------------------------------------------------------------------------------- '
'     You must set PATH_TO_HAXE_PHASER prior using this script     '
' -------------------------------------------------------------------------------------- '
const PATH_TO_HAXE_PHASER = "E:\prj\init\html\haxe-phaser"

const PATH_TO_SITE_DIR = "_site"
const ASSETS_FOLDER = "assets"
const CMD_COPY_CMD = "xcopy /y /v /e /i /q  "

' -------------------------------------------------------------------------------------- '
' Full path for Haxe compiler (in case it is not found in windows PATH)'
' -------------------------------------------------------------------------------------- '
const HAXE = "haxe"


dim args
dim siteDirectory
dim assetsDirectory
dim pathToPhaserFile
dim projectName
dim callerDirectory
dim currentDirectory
dim err
dim pathToHaxePhaserSrc

'It contains the path where the resulting javascript file generated by Haxe compiler will be saved to'
dim path2GeneratedJS

dim orig
dim dest


' I read the input arguments
Set args = WScript.Arguments
projectName = args.Item(0)
callerDirectory = args.Item(1)

''WScript.Echo  "projectName = [" + projectName + "]" 
''WScript.Echo  "callerDirectory = [" + callerDirectory + "]" 

' now I get the current working directory
currentDirectory = left(WScript.ScriptFullName,(Len(WScript.ScriptFullName))-(len(WScript.ScriptName)))
''WScript.Echo currentDirectory

' let adjust the correct paths that will be used in the program
SetPaths


' Do I need to create _site folder? I do it in case of need.
'   - Does folder _site\assets exist? I copy assets to _site if it doesn't exist.
'   - Does file phaser.js exist in folder _site? I copy it to _site if it doesn't exist.
CopyAssets

' let me generate the build.hxml
path2GeneratedJS = PATH_TO_SITE_DIR
CreateBuildHxml projectName, siteDirectory, callerDirectory

' now I'll ccompile the source code using the build.hxml file I generated in the previous step
RunHaxeCompiler callerDirectory

' it's time to create the HTML file for the current project.
CreateHTMLFile projectName, siteDirectory

' In case Haxe successfully compiled the program,
' I must find the JS file in the siteDirectory.
If DidHaxeBuildFile(projectName, siteDirectory) Then
    
    MsgBox "Your project was compiled to file " & projectName & ".js" & VbCrLf & VbCrLf & "You can run " & projectName & ".html from " & siteDirectory, vbOKOnly, "Source Code Was Successfully Compiled"
Else
    MsgBox "Haxe didn't generated the file " & projectName & ".js" & VbCrLf & VbCrLf & "Run Haxe build.hxml from " & callerDirectory, vbCritical, "Error Compiling Source Code"
End If



' -------------------------------------------------------------------------------------- '
'                All subs and functions are declared below             '
' -------------------------------------------------------------------------------------- '

Function DoesFolderExist(folder)
    Dim wshshell
    Dim fso
    Dim shl

    Set fso = CreateObject("Scripting.FileSystemObject")
    Set shl = CreateObject("WScript.Shell")

    ''WScript.Echo "I'm going to check whether folder " & folder & " exists"
    DoesFolderExist = fso.FolderExists(folder)
    
End Function




' It copies the directory assets and it's files to directory _site.
' It copies the phaser.js from haxe-phaser\lib folder to directory _site.
' It creates the HTML file for the project in directory _site.
' 
' Note: in case directory _site doesn't exist it's created.
Sub CopyAssets()
    Dim wshshell
    Dim fso
    Dim shl
    Dim cmd
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set wshshell = WScript.CreateObject("WScript.Shell")
    
    ' Do I need to create the site folder?
    If (Not DoesFolderExist(siteDirectory)) Then
        fso.CreateFolder siteDirectory
    End If

    ' Do I need to copy the assets folder?
    If (Not DoesFolderExist(siteDirectory & "\" & ASSETS_FOLDER)) Then
        cmd = CMD_COPY_CMD & " " & assetsDirectory & " " & siteDirectory & "\assets"
        ''WScript.Echo "cmd [" & cmd & "]"
        
        
        wshshell.Run cmd, True
    End If

    If (Not DoesFileExit(siteDirectory & "\phaser.js")) Then
        ''WScript.Echo "I will copy " & pathToPhaserFile & " to " & siteDirectory
        
        cmd = CMD_COPY_CMD & " " & pathToPhaserFile & " " & siteDirectory
        ''WScript.Echo "cmd [" & cmd & "]"
        wshshell.Run cmd, True
    End If

    Set wshshell = Nothing
    Set fso = Nothing
    
End Sub




Sub CreateBuildHxml(filename, path2GeneratedJS, saveto)

    dim objFSO
    dim objFile
    dim lines
    dim outFile
    dim outDir4Haxe
    
    outDir4Haxe = path2GeneratedJS & "\" & filename & ".js"
    
    lines = _   
            "-cp src"  & VbCrLf & _
            "-cp " & pathToHaxePhaserSrc & VbCrLf & _
            "-js " & outDir4Haxe & VbCrLf & _
            "-main io.phaser.Main"

    ''WScript.Echo lines

    outFile = saveto & "build.hxml"
    
    ''WScript.Echo "I'm going to save build file in [" & outFile & "]"
    
    Set objFSO=CreateObject("Scripting.FileSystemObject")
    set objFile = objFSO.CreateTextFile(outFile,True)
    objFile.WriteLine(lines)
    objFile.Close

End Sub



Sub CreateHTMLFile(ByVal filename, ByVal saveto)

    dim objFSO
    dim lines
    dim objFile
    lines = "<!DOCTYPE html>" & VbCrLf & _
    "<html lang=""en"">" & VbCrLf & _
    "<head>" & VbCrLf & _
    "	<meta charset=""utf-8""/>" & VbCrLf & _
    "	<title>LoadAnImage</title>" & VbCrLf & _
    "	<meta name=""description"" content="""" />" & VbCrLf & _
    "    <script src=""phaser.js""></script>" & VbCrLf & _
    "</head>" & VbCrLf & _
    "<body>" & VbCrLf & _
    "	<script src=" & chr(34) & filename & ".js" & chr(34) & "></script>" & VbCrLf & _
    "</body>" & VbCrLf & _
    "</html>" & VbCrLf

    saveto = saveto & "\" & filename & ".html"
    ''WScript.Echo lines
    ''WScript.Echo "I will save " & filename & ".html" & " to [" & saveto & "]"

    Set objFSO=CreateObject("Scripting.FileSystemObject")
    set objFile = objFSO.CreateTextFile(saveto,True)
    objFile.WriteLine(lines) 
    objFile.Close
    ''WScript.Echo "File was successfully saved to  [" & saveto & "]"
End Sub




Function DoesFileExit(file)

    dim filesys
    dim err

    set filesys=CreateObject("Scripting.FileSystemObject")
    ' I need to wait a bit to be sure build was completed. Otherwise, I get an error as if the build had failed.
    WScript.Sleep 1000
    ''WScript.Echo "I'll check whether file " & file & " exists"
    
    If filesys.FileExists(file) Then
        err = True
    Else
        err = False
    End if

    DoesFileExit = err
End Function




Function DidHaxeBuildFile(file, destination)
    Dim output
    Dim err
    output = destination & "\" & file & ".js"
    ''WScript.Echo "Let me see whether [" & output & "] exists"
    err = DoesFileExit(output)
     
    ''WScript.Echo "err = " & err
     
    DidHaxeBuildFile = err 
End Function




Sub RunHaxeCompiler(pathToBuildHxml)
    Dim wshshell
    Dim cmd
    Dim err
    
    cmd = HAXE & " " & pathToBuildHxml & "\" & "build.hxml"
    
    ''WScript.Echo "cmd [" & cmd & "]"
    
    Set wshshell = WScript.CreateObject("WScript.Shell")
    wshshell.Run cmd, True
    Set wshshell = nothing

End Sub




' In case the PATH_TO_SITE_DIR doesn't start with a letter, it will add the project from current path.
' Otherwise, the provided path will be used.
Sub SetSiteDirectory()
    Dim arrNames
    Dim found
    
    arrNames = Split(PATH_TO_SITE_DIR, "\")
    ''WScript.Echo "arrNames [" & arrNames(0) & "]"
    found = InStr(arrNames(0), ":")
    ''WScript.Echo "found = " & found
    
    If 0 = found Then
        ''WScript.Echo "PATH_TO_SITE_DIR is a relative path. Let me set siteDirectory as [" & currentDirectory & "] + " & PATH_TO_SITE_DIR
        siteDirectory = currentDirectory & PATH_TO_SITE_DIR
    Else
        ''WScript.Echo "PATH_TO_SITE_DIR is a absolute path. Let me set siteDirectory"
        siteDirectory = PATH_TO_SITE_DIR
    End If
    
    ''WScript.Echo "siteDirectory[" & siteDirectory & "]"
    
End Sub

Sub SetAssetsDirectory
    assetsDirectory = currentDirectory & "\" & ASSETS_FOLDER
    ''WScript.Echo "assetsDirectory[" & assetsDirectory & "]"
End Sub




Sub SetPaths
    SetSiteDirectory
    SetAssetsDirectory
    SetPathToHaxePhaserSrc
    SetPathToPhaserFile
End Sub




Sub SetPathToHaxePhaserSrc 
    pathToHaxePhaserSrc =  PATH_TO_HAXE_PHASER & "\src"
End Sub




Sub SetPathToPhaserFile
    pathToPhaserFile =  PATH_TO_HAXE_PHASER & "\lib\phaser.js"
End Sub

